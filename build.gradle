buildscript {
    ext.kotlin_version = '1.3.50'
    ext.ktor_version = '1.3.0'
    ext.logback_version = '1.2.1'
    ext.ktor_pebble_version = '0.0.5'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.3"
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.jfrog.bintray'


version = ktor_pebble_version
group = 'com.tlogx.ktor'
description = """Ktor Pebble Templates"""
mainClassName = "io.ktor.server.netty.DevelopmentEngine"

sourceSets {
    main.kotlin.srcDirs = ['src/main/kotlin']
    test.kotlin.srcDirs = ['src/test/kotlin']
    main.resources.srcDirs = ['src/main/resources']
}

repositories {
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile ("io.pebbletemplates:pebble:3.1.0") {
        exclude(group: "org.slf4j", module: "slf4j-api")
        exclude(group: "com.google.guava", module: "guava")
    }

    testCompile "io.ktor:ktor-server-tests:$ktor_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "JeffSmithDev"
            name "Jeff Smith"
            email "jeff@thoughtlogix.com"
        }
    }

    scm {
        url "https://github.com/jeffsmithdev/ktor-pebble"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.tlogx.ktor'
            artifactId 'ktor-pebble'
            version ktor_pebble_version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Ktor Pebble Template Feature')
                root.appendNode('name', 'Ktor Pebble Template Feature')
                root.appendNode('url', 'https://github.com/jeffsmithdev/ktor-pebble')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenPublication']
    dryRun = false
    publish = true
    override = true
    pkg {
        repo = 'maven'
        name = 'ktor-pebble'
        desc = 'Ktor Pebble Template Feature'
        websiteUrl = 'https://github.com/jeffsmithdev/ktor-pebble'
        issueTrackerUrl = 'https://github.com/jeffsmithdev/ktor-pebble/issues'
        userOrg = user
        licenses = ['Apache-2.0']
        labels = ['ktor', 'pebble', 'kotlin']
        vcsUrl = 'https://github.com/jeffsmithdev/ktor-pebble.git'
        githubRepo = 'jeffsmithdev/ktor-pebble'
        githubReleaseNotesFile = 'README.md'
        version {
            name = ktor_pebble_version
            desc = ktor_pebble_version
            released = new Date()
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
